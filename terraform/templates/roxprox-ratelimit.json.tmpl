[
      %{ if ENABLE_APPMESH }
       {
        "name" : "envoy",
        "image" : "111345817488.dkr.ecr.${AWS_REGION}.amazonaws.com/aws-appmesh-envoy:${APPMESH_ENVOY_RELEASE}",
        "essential" : true,
        "environment" : [
          {
              "name" : "APPMESH_VIRTUAL_NODE_NAME",
              "value" : "mesh/${APPMESH_NAME}/virtualNode/roxprox"
          }
        ],
        "logConfiguration": { 
          "logDriver": "awslogs",
          "options": { 
             "awslogs-group" : "roxprox",
             "awslogs-region": "${AWS_REGION}",
             "awslogs-stream-prefix": "roxprox-sidecar"
          }
        },
        "healthCheck" : {
          "command" : [
              "CMD-SHELL",
              "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE"
          ],
          "interval" : 5,
          "retries" : 3,
          "startPeriod" : 10,
          "timeout" : 2
        },
        "memory" : 512,
        "user" : "1337"
    },
    %{ endif }
    {
      %{ if ENABLE_APPMESH }
      "dependsOn": [{
        "containerName": "envoy",
        "condition": "HEALTHY"
      }],
      %{ endif }
      "essential": true,
      "image": "public.ecr.aws/y9x3p3i6/roxprox-ratelimit:${RATELIMIT_RELEASE}",
      "name": "roxprox",
      "command": [
         "-storage-path", "/config",
         "-storage-type", "s3",
         "-storage-bucket", "${S3_BUCKET}",
         "-aws-region", "${AWS_REGION}"
      ],
      "environment" : [
          %{ if RATELIMIT_DEBUG }
          {
              "name" : "DEBUG",
              "value" : "true"
          },
          %{ endif }
          {
              "name" : "CACHE_SIZE_MB",
              "value" : "${RATELIMIT_CACHE_SIZE}"
          }
      ],
      "logConfiguration": { 
              "logDriver": "awslogs",
              "options": { 
                 "awslogs-group" : "roxprox",
                 "awslogs-region": "${AWS_REGION}",
                 "awslogs-stream-prefix": "roxprox-ratelimit"
              }
       },
       "portMappings": [ 
          { 
             "containerPort": 8081,
             "hostPort": 8081,
             "protocol": "tcp"
          }
       ]
    }
  ]